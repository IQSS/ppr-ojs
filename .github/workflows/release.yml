name: release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-test-ppr-ojs-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4
      - name: test pprOjsPlugin
        working-directory: .
        run: make test
      - name: test pprReviewReportPlugin
        working-directory: .
        run: make test_report
  create-release-plugin:
    runs-on: ubuntu-latest
    needs: [build-and-test-ppr-ojs-plugin]
    if: needs.build-and-test-ppr-ojs-plugin.result == 'success'
    env:
      PLUGIN_NAME: "pprOjsPlugin"
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Creates plugin release and tar.gz
        working-directory: .
        run: make release
      - name: Get plugin Version
        id: get_plugin_version
        run: echo "PLUGIN_ARTIFACT_NAME=${{ env.PLUGIN_NAME }}-$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Commit new version
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add -f VERSION pprOjsPlugin/version.xml pprReviewsReportPlugin/version.xml
          git commit -m "Release created: ${{ steps.get_plugin_version.outputs.PLUGIN_ARTIFACT_NAME }}"
          git push origin
      - name: Create release branch
        run: |
          git checkout -b releases/${{ steps.get_plugin_version.outputs.PLUGIN_ARTIFACT_NAME }}
          git push origin releases/${{ steps.get_plugin_version.outputs.PLUGIN_ARTIFACT_NAME }}
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-artifacts
          retention-days: 7
          path: ./releases/*.tar.gz
